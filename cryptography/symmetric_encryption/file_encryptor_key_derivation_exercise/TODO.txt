Exercise: Symmetric Encryption + Key Derivation
-------------------------------------------------------------------------------

Implement a class called "FileEncrypter" with the following operations:

A) __init__(self, password:bytes, salt:bytes, iv:bytes)->None 
   A constructor that takes a password and a salt and uses a key derivation 
   function to generate a secret key: 
       PBKDF2HMAC:
        hashes.SHA256()
        length=32,
        iterations=100000 

    The secret key and the given initialization vector (iv) are used to setup
    an AES cipher in CTR mode.

B) save(self, filename:str, data:bytes)->None 
   Encrypt the given data with the AES cipher.
   Store the ciphertext in a binary file with the given "filename".

C) load(self, filename:str)->bytes 
   Load the content of a binary file with the given "filename".
   Decrypt the loaded bytes with the AES cipher and return the plaintext data.

Verify your implementations with the given "FileEncryptorTest" class.
